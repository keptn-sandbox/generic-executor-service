---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: generic-executor-service
  labels:
    "app": "keptn"
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: generic-executor-service-secrets
  labels:
    "app": "keptn"
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: generic-executor-service-secrets
  labels:
    "app": "keptn"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: generic-executor-service-secrets
subjects:
  - kind: ServiceAccount
    name: generic-executor-service

---
# Deployment of our generic-executor-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generic-executor-service
spec:
  selector:
    matchLabels:
      run: generic-executor-service
  replicas: 1
  template:
    metadata:
      labels:
        run: generic-executor-service
        app.kubernetes.io/name: generic-executor-service
        app.kubernetes.io/version: 0.8.0
    spec:
      serviceAccountName: generic-executor-service
      containers:
        - name: generic-executor-service
          image: keptnsandbox/generic-executor-service:0.8.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace                
            - name: VERBOSE_LOGGING
              value: "false"
            - name: YOURCUSTOMENV
              value: YOURCUSTOMVALUE
            - name: DT_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dynatrace
                  key: DT_API_TOKEN
                  optional: true
            - name: DT_TENANT
              valueFrom:
                secretKeyRef:
                  name: dynatrace
                  key: DT_TENANT
                  optional: true
            - name: KEPTN_API_URL
              valueFrom:
                secretKeyRef:
                  name: dynatrace
                  key: KEPTN_API_URL
                  optional: true
            - name: KEPTN_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dynatrace
                  key: KEPTN_API_TOKEN
                  optional: true
            - name: KEPTN_BRIDGE_URL
              valueFrom:
                secretKeyRef:
                  name: dynatrace
                  key: KEPTN_BRIDGE_URL
                  optional: true
        - name: distributor
          image: keptn/distributor:0.8.4
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "16Mi"
              cpu: "25m"
            limits:
              memory: "32Mi"
              cpu: "250m"
          env:
            - name: VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName            
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.>'
            - name: PUBSUB_RECIPIENT
              value: 'generic-executor-service'
        
---
# Expose generic-executor-service via Port 8080 within the cluster
apiVersion: v1
kind: Service
metadata:
  name: generic-executor-service
  labels:
    run: generic-executor-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    run: generic-executor-service
